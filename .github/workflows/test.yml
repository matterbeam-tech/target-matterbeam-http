name: Test

on:
  push:
    branches: [main]

  pull_request:
    branches: [main]

  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5

      - uses: snok/install-poetry@v1

      - name: Install dependencies
        run: |
          poetry install

      - name: Lint
        run: |
          poetry run ruff check target_matterbeam_http

  typecheck:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5

      - uses: snok/install-poetry@v1

      - name: Install dependencies
        run: |
          poetry install

      - name: Typecheck
        run: |
          poetry run mypy target_matterbeam_http

  test:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.10"
          - "3.11"
          - "3.12"

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - uses: snok/install-poetry@v1

      - name: Install dependencies
        run: |
          poetry env use ${{ matrix.python-version }}
          poetry install

      - name: .env file
        run: |
          touch .env

          # TODO

      - name: Test with pytest
        run: |
          poetry run pytest
